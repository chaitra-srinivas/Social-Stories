[{"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\index.js":"1","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\reportWebVitals.js":"2","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\App.js":"3","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Home.js":"4","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\queries.js":"5","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\mutations.js":"6","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryList.js":"7","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryAdd.js":"8","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInfo.js":"9","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryEdit.js":"10","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryPages.js":"11","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInput.js":"12","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Login.js":"13","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\auth.js":"14","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryTemplate.js":"15","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Signup.js":"16","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Navigation.js":"17"},{"size":645,"mtime":1643681616389,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1642314124616,"results":"20","hashOfConfig":"19"},{"size":2700,"mtime":1643762929899,"results":"21","hashOfConfig":"19"},{"size":416,"mtime":1643773260279,"results":"22","hashOfConfig":"19"},{"size":1185,"mtime":1643674177757,"results":"23","hashOfConfig":"19"},{"size":1968,"mtime":1643767128154,"results":"24","hashOfConfig":"19"},{"size":974,"mtime":1643703763186,"results":"25","hashOfConfig":"19"},{"size":3943,"mtime":1643703878784,"results":"26","hashOfConfig":"19"},{"size":2050,"mtime":1643602181417,"results":"27","hashOfConfig":"19"},{"size":4101,"mtime":1643616855788,"results":"28","hashOfConfig":"19"},{"size":832,"mtime":1643172717574,"results":"29","hashOfConfig":"19"},{"size":2397,"mtime":1643616725058,"results":"30","hashOfConfig":"19"},{"size":2676,"mtime":1643773294541,"results":"31","hashOfConfig":"19"},{"size":755,"mtime":1643620915287,"results":"32","hashOfConfig":"19"},{"size":1430,"mtime":1643772657759,"results":"33","hashOfConfig":"19"},{"size":2925,"mtime":1643773371971,"results":"34","hashOfConfig":"19"},{"size":1586,"mtime":1643773173026,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"zpfcfd",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\index.js",[],["75","76"],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\reportWebVitals.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\App.js",["77"],"// Tesing Login with material ui\n/*\nimport React from \"react\";\nimport './App.css';\nimport Login from \"./components/pages/Login\"\n\nfunction App(){\nreturn(\n  <div className=\"App\">\n    <Login />\n  </div>\n);\n}\n\nexport default App;\n\n\n\nOriginal code\n*/\nimport React from \"react\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  NavLink,\n} from \"react-router-dom\";\n\nimport Home from \"./components/pages/Home\";\nimport Navigation from \"./components/pages/Navigation\";\nimport Login from \"./components/pages/Login\";\nimport Signup from \"./components/pages/Signup\";\n\nimport StoryList from \"./components/stories/StoryList\";\nimport StoryAdd from \"./components/stories/StoryAdd\";\nimport StoryInfo from \"./components/stories/StoryInfo\";\nimport StoryEdit from \"./components/stories/StoryEdit\";\nimport StoryTemplate from \"./components/stories/StoryTemplate\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='container flex-column justify-flex-start min-100-vh'>\n          <Routes>\n            <Route exact path='/' element={<Home />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/login' element={<Login />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/signup' element={<Signup />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/menu' element={<Navigation />} />\n          </Routes>\n          <div className='container'>\n            <Main />\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nfunction Main() {\n  return (\n    <Routes>\n      {/*   <Route exact path='/' element={<Home />} /> */}\n      {/*   <Route exact path='/login' element={<Login />} /> */}\n      {/*    <Route exact path='/signup' element={<Signup />} /> */}\n      <Route exact path='/template' element={<StoryTemplate />} />\n      <Route exact path='/stories' element={<StoryList />} />\n      <Route exact path='/stories/:id/new' element={<StoryAdd />} />\n      <Route exact path='/stories/:id' element={<StoryInfo />} />\n      <Route exact path='/stories/:id/edit' element={<StoryEdit />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Home.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\queries.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\mutations.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryList.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryAdd.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInfo.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryEdit.js",["78"],"import { React, useState } from \"react\";\r\nimport { GET_STORY } from \"../../utils/queries\";\r\nimport { UPDATE_STORY } from \"../../utils/mutations\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\n\r\nimport StoryPages from \"./StoryPages\";\r\nimport StoryInput from \"./StoryInput\";\r\n\r\nconst templates = require(\"./templates.json\");\r\n\r\nfunction StoryEdit(props) {\r\n  let { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  console.log(id);\r\n\r\n  const { loading, data } = useQuery(GET_STORY, { variables: { id: id } });\r\n  const [updateStory, { dataloading, error }] = useMutation(UPDATE_STORY, {\r\n    update(cache, { data: { updateStory } }) {\r\n      try {\r\n        cache.readQuery({ query: GET_STORY });\r\n        cache.writeQuery({\r\n          query: GET_STORY,\r\n          data: { story: updateStory },\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  });\r\n  const story = data?.story || {};\r\n\r\n  let selectedTemplate = templates.find((f)=>f.id == story.templateId);\r\n\r\n  const [selectedPage, setSelectedPage] = useState(selectedTemplate.pages[0]);\r\n  const [variablesModel, setVariablesModel] = useState(createVariablesModel(story));\r\n  const [title, setTitle] = useState(story.title);\r\n\r\n  if (loading || dataloading) return \"Loading...\";\r\n  if (error) return `Submission error! ${error.message}`;\r\n\r\n  function createVariablesModel(story) {\r\n    return story.pages.map((page) => {\r\n      return {\r\n        pageId: page.pageId,\r\n        content: page.content,\r\n        image: page.image,\r\n        variables: page.variables.map((variable) => ({\r\n          varId: variable.varId,\r\n          value: variable.value,\r\n        })),\r\n      };\r\n    });\r\n  }\r\n\r\n  function pageSelected(page) {\r\n    setSelectedPage(page);\r\n  }\r\n\r\n  function variablesUpdated(varModel) {\r\n    setVariablesModel(varModel);\r\n  }\r\n\r\n  function editStory() {\r\n    const pagesToUpdate = selectedTemplate.pages.map((p) => {\r\n      let pageVariablesModel = variablesModel.find((f) => f.pageId === p.id);\r\n      return {\r\n        pageId: p.id,\r\n        image: pageVariablesModel.image,\r\n        content: pageVariablesModel.content,\r\n        variables: p.variables.map((v) => {\r\n          return {\r\n            varId: v.id,\r\n            name: v.name,\r\n            description: v.description,\r\n            value: pageVariablesModel.variables.find((f) => f.varId === v.id)\r\n              .value,\r\n          };\r\n        }),\r\n      };\r\n    });\r\n\r\n    updateStory({\r\n      variables: {\r\n        id: story.id,\r\n        templateId: story.templateId,\r\n        title: title,\r\n        pages: pagesToUpdate,\r\n      },\r\n    });\r\n    navigate(\"/stories/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ float: \"left\", width: \"300px\" }}>\r\n        <StoryPages\r\n          pages={selectedTemplate.pages}\r\n          pageSelected={pageSelected}\r\n        />\r\n      </div>\r\n      <form\r\n        style={{ float: \"right\", width: \"700px\" }}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}>\r\n        <div className='form-group'>\r\n          <label>Title:</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <StoryInput\r\n            selectedPage={selectedPage}\r\n            variablesModel={variablesModel}\r\n            variablesUpdated={variablesUpdated}\r\n          />\r\n          {/*     <StoryContent dynamicContent={prepareDynamicContent}/> */}\r\n        </div>\r\n        <div>\r\n          <p className='btn-group'>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary'\r\n              onClick={editStory}>\r\n              Update\r\n            </button>\r\n            <Link to='/stories' className='btn btn-secondary'>\r\n              Cancel\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryEdit;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryPages.js",["79","80"],"import { React, useState } from \"react\";\r\n\r\nfunction StoryPages(props) {\r\n  const  pages  = props.pages;\r\n  const  pageSelected  = props.pageSelected;\r\n  \r\n  const [selectedPage, setSelectedPage] = useState(pages[0]);\r\n\r\n let links = pages.map((page)=>{\r\n    return (\r\n        <div key={page.id}>\r\n               <a\r\n                 href='#'\r\n                 onClick={(e) => {\r\n                   e.preventDefault();\r\n                  setSelectedPage(page);\r\n                  pageSelected(page);\r\n                 }}>\r\n                 {page.title}\r\n               </a>\r\n               <br />\r\n               <span>{page.description}</span> <br />\r\n             </div>\r\n         );\r\n  })\r\n\r\n  return(\r\n      <div>\r\n        <ul>\r\n          <li>{links}</li>\r\n        </ul>\r\n      </div>\r\n  )\r\n\r\n  \r\n}\r\nexport default StoryPages;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInput.js",["81"],"import { React, useState, useEffect } from \"react\";\r\n\r\nfunction StoryInput(props) {\r\n  const selectedPage = props.selectedPage;\r\n  const varUpdated = props.variablesUpdated;\r\n  const varModel = props.variablesModel;\r\n\r\n  const [variablesModel, setVariablesModel] = useState(varModel);\r\n  const [dynamicContent, setDynamicContent] = useState(getDynamicContent());\r\n\r\n  useEffect(() => {\r\n    setDynamicContent(getDynamicContent());\r\n  },[getDynamicContent]);\r\n\r\n  function getDynamicContent() {\r\n    let dynContent = selectedPage.content;\r\n    selectedPage.variables.forEach((variable) => {\r\n      dynContent = dynContent.replace(\r\n        new RegExp(variable.name, \"g\")  ,\r\n        getVarValue(selectedPage.id, variable.id)\r\n      );  \r\n    });\r\n    return dynContent;\r\n  }\r\n\r\n  function getVarValue(pageId, varId) {\r\n    return variablesModel\r\n      .find((p) => p.pageId === pageId)\r\n      .variables.find((v) => v.varId === varId).value;\r\n  }\r\n\r\n  function getUpdatedVarModel(pageId, varId, value) {\r\n    return [...variablesModel].map((p) => {\r\n      p.variables = [...p.variables]; // clone variables\r\n\r\n      if (p.pageId === pageId) {\r\n        // Update variable value\r\n        p.variables.find((v) => v.varId === varId).value = value;\r\n        // Update dynamic content\r\n        p.content = getDynamicContent();\r\n      }\r\n      return p;\r\n    });\r\n  }\r\n\r\n  // Dynamically changes the values of the text input fields based on the selected page\r\n\r\n  let variables = selectedPage.variables.map((variable) => {\r\n    return (\r\n      <div key={variable.id} className='form-group'>\r\n        <label>{variable.description}:</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={getVarValue(selectedPage.id, variable.id)}\r\n          onChange={(e) => {\r\n            setVariablesModel(\r\n              getUpdatedVarModel(selectedPage.id, variable.id, e.target.value)\r\n            );\r\n            varUpdated(variablesModel);\r\n          }}\r\n          placeholder={variable.description}></input>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={selectedPage.image}\r\n        style={{ width: \"200px\", height: \"150px\" }}\r\n        alt='school'\r\n      />\r\n      <div className='form-group'>{variables}</div>\r\n      <div dangerouslySetInnerHTML={{ __html: dynamicContent }}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryInput;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Login.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\auth.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryTemplate.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Signup.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Navigation.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":34,"column":3,"nodeType":"88","messageId":"89","endLine":34,"endColumn":10},{"ruleId":"90","severity":1,"message":"91","line":34,"column":51,"nodeType":"92","messageId":"93","endLine":34,"endColumn":53},{"ruleId":"86","severity":1,"message":"94","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":12,"column":16,"nodeType":"97","endLine":18,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":15,"column":3,"nodeType":"100","endLine":24,"endColumn":4},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","The 'getDynamicContent' function makes the dependencies of useEffect Hook (at line 13) change on every render. To fix this, wrap the definition of 'getDynamicContent' in its own useCallback() Hook.","FunctionDeclaration","no-global-assign","no-unsafe-negation"]