[{"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\index.js":"1","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\reportWebVitals.js":"2","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\App.js":"3","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Home.js":"4","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\queries.js":"5","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\mutations.js":"6","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryList.js":"7","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryAdd.js":"8","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInfo.js":"9","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryEdit.js":"10","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryPages.js":"11","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInput.js":"12","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Login.js":"13","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\auth.js":"14","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryTemplate.js":"15","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Signup.js":"16","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Navigation.js":"17","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Main.js":"18"},{"size":692,"mtime":1643882236371,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1642314124616,"results":"21","hashOfConfig":"20"},{"size":2338,"mtime":1643876259896,"results":"22","hashOfConfig":"20"},{"size":869,"mtime":1643929192931,"results":"23","hashOfConfig":"20"},{"size":1186,"mtime":1643851479435,"results":"24","hashOfConfig":"20"},{"size":1968,"mtime":1643767128154,"results":"25","hashOfConfig":"20"},{"size":974,"mtime":1643703763186,"results":"26","hashOfConfig":"20"},{"size":3943,"mtime":1643703878784,"results":"27","hashOfConfig":"20"},{"size":2050,"mtime":1643602181417,"results":"28","hashOfConfig":"20"},{"size":4101,"mtime":1643616855788,"results":"29","hashOfConfig":"20"},{"size":832,"mtime":1643172717574,"results":"30","hashOfConfig":"20"},{"size":2397,"mtime":1643616725058,"results":"31","hashOfConfig":"20"},{"size":2676,"mtime":1643773294541,"results":"32","hashOfConfig":"20"},{"size":759,"mtime":1643868366931,"results":"33","hashOfConfig":"20"},{"size":1827,"mtime":1643859380763,"results":"34","hashOfConfig":"20"},{"size":2925,"mtime":1643773371971,"results":"35","hashOfConfig":"20"},{"size":1326,"mtime":1643935001777,"results":"36","hashOfConfig":"20"},{"size":0,"mtime":1643702836320,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zpfcfd",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\index.js",[],["80","81"],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\reportWebVitals.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\App.js",["82"],"import * as React from \"react\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\n\n\nimport Home from \"./components/pages/Home\";\nimport Navigation from \"./components/pages/Navigation\";\nimport Login from \"./components/pages/Login\";\nimport Signup from \"./components/pages/Signup\";\n\nimport StoryList from \"./components/stories/StoryList\";\nimport StoryAdd from \"./components/stories/StoryAdd\";\nimport StoryInfo from \"./components/stories/StoryInfo\";\nimport StoryEdit from \"./components/stories/StoryEdit\";\nimport StoryTemplate from \"./components/stories/StoryTemplate\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='container flex-column justify-flex-start min-100-vh'>\n          <Routes>\n            <Route exact path='/' element={<Home />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/login' element={<Login />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/signup' element={<Signup />} />\n          </Routes>\n          <div className='container'>\n            <Main />\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nfunction Main() {\n  return (\n    <Routes>\n      {/*   <Route exact path='/' element={<Home />} /> */}\n      {/*   <Route exact path='/login' element={<Login />} /> */}\n      {/*    <Route exact path='/signup' element={<Signup />} /> */}\n      <Route exact path='/template' element={<StoryTemplate />} />\n      <Route exact path='/stories' element={<StoryList />} />\n      <Route exact path='/stories/:id/new' element={<StoryAdd />} />\n      <Route exact path='/stories/:id' element={<StoryInfo />} />\n      <Route exact path='/stories/:id/edit' element={<StoryEdit />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Home.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\queries.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\mutations.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryList.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryAdd.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInfo.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryEdit.js",["83"],"import { React, useState } from \"react\";\r\nimport { GET_STORY } from \"../../utils/queries\";\r\nimport { UPDATE_STORY } from \"../../utils/mutations\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\n\r\nimport StoryPages from \"./StoryPages\";\r\nimport StoryInput from \"./StoryInput\";\r\n\r\nconst templates = require(\"./templates.json\");\r\n\r\nfunction StoryEdit(props) {\r\n  let { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  console.log(id);\r\n\r\n  const { loading, data } = useQuery(GET_STORY, { variables: { id: id } });\r\n  const [updateStory, { dataloading, error }] = useMutation(UPDATE_STORY, {\r\n    update(cache, { data: { updateStory } }) {\r\n      try {\r\n        cache.readQuery({ query: GET_STORY });\r\n        cache.writeQuery({\r\n          query: GET_STORY,\r\n          data: { story: updateStory },\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  });\r\n  const story = data?.story || {};\r\n\r\n  let selectedTemplate = templates.find((f)=>f.id == story.templateId);\r\n\r\n  const [selectedPage, setSelectedPage] = useState(selectedTemplate.pages[0]);\r\n  const [variablesModel, setVariablesModel] = useState(createVariablesModel(story));\r\n  const [title, setTitle] = useState(story.title);\r\n\r\n  if (loading || dataloading) return \"Loading...\";\r\n  if (error) return `Submission error! ${error.message}`;\r\n\r\n  function createVariablesModel(story) {\r\n    return story.pages.map((page) => {\r\n      return {\r\n        pageId: page.pageId,\r\n        content: page.content,\r\n        image: page.image,\r\n        variables: page.variables.map((variable) => ({\r\n          varId: variable.varId,\r\n          value: variable.value,\r\n        })),\r\n      };\r\n    });\r\n  }\r\n\r\n  function pageSelected(page) {\r\n    setSelectedPage(page);\r\n  }\r\n\r\n  function variablesUpdated(varModel) {\r\n    setVariablesModel(varModel);\r\n  }\r\n\r\n  function editStory() {\r\n    const pagesToUpdate = selectedTemplate.pages.map((p) => {\r\n      let pageVariablesModel = variablesModel.find((f) => f.pageId === p.id);\r\n      return {\r\n        pageId: p.id,\r\n        image: pageVariablesModel.image,\r\n        content: pageVariablesModel.content,\r\n        variables: p.variables.map((v) => {\r\n          return {\r\n            varId: v.id,\r\n            name: v.name,\r\n            description: v.description,\r\n            value: pageVariablesModel.variables.find((f) => f.varId === v.id)\r\n              .value,\r\n          };\r\n        }),\r\n      };\r\n    });\r\n\r\n    updateStory({\r\n      variables: {\r\n        id: story.id,\r\n        templateId: story.templateId,\r\n        title: title,\r\n        pages: pagesToUpdate,\r\n      },\r\n    });\r\n    navigate(\"/stories/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ float: \"left\", width: \"300px\" }}>\r\n        <StoryPages\r\n          pages={selectedTemplate.pages}\r\n          pageSelected={pageSelected}\r\n        />\r\n      </div>\r\n      <form\r\n        style={{ float: \"right\", width: \"700px\" }}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}>\r\n        <div className='form-group'>\r\n          <label>Title:</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <StoryInput\r\n            selectedPage={selectedPage}\r\n            variablesModel={variablesModel}\r\n            variablesUpdated={variablesUpdated}\r\n          />\r\n          {/*     <StoryContent dynamicContent={prepareDynamicContent}/> */}\r\n        </div>\r\n        <div>\r\n          <p className='btn-group'>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary'\r\n              onClick={editStory}>\r\n              Update\r\n            </button>\r\n            <Link to='/stories' className='btn btn-secondary'>\r\n              Cancel\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryEdit;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryPages.js",["84","85"],"import { React, useState } from \"react\";\r\n\r\nfunction StoryPages(props) {\r\n  const  pages  = props.pages;\r\n  const  pageSelected  = props.pageSelected;\r\n  \r\n  const [selectedPage, setSelectedPage] = useState(pages[0]);\r\n\r\n let links = pages.map((page)=>{\r\n    return (\r\n        <div key={page.id}>\r\n               <a\r\n                 href='#'\r\n                 onClick={(e) => {\r\n                   e.preventDefault();\r\n                  setSelectedPage(page);\r\n                  pageSelected(page);\r\n                 }}>\r\n                 {page.title}\r\n               </a>\r\n               <br />\r\n               <span>{page.description}</span> <br />\r\n             </div>\r\n         );\r\n  })\r\n\r\n  return(\r\n      <div>\r\n        <ul>\r\n          <li>{links}</li>\r\n        </ul>\r\n      </div>\r\n  )\r\n\r\n  \r\n}\r\nexport default StoryPages;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInput.js",["86"],"import { React, useState, useEffect } from \"react\";\r\n\r\nfunction StoryInput(props) {\r\n  const selectedPage = props.selectedPage;\r\n  const varUpdated = props.variablesUpdated;\r\n  const varModel = props.variablesModel;\r\n\r\n  const [variablesModel, setVariablesModel] = useState(varModel);\r\n  const [dynamicContent, setDynamicContent] = useState(getDynamicContent());\r\n\r\n  useEffect(() => {\r\n    setDynamicContent(getDynamicContent());\r\n  },[getDynamicContent]);\r\n\r\n  function getDynamicContent() {\r\n    let dynContent = selectedPage.content;\r\n    selectedPage.variables.forEach((variable) => {\r\n      dynContent = dynContent.replace(\r\n        new RegExp(variable.name, \"g\")  ,\r\n        getVarValue(selectedPage.id, variable.id)\r\n      );  \r\n    });\r\n    return dynContent;\r\n  }\r\n\r\n  function getVarValue(pageId, varId) {\r\n    return variablesModel\r\n      .find((p) => p.pageId === pageId)\r\n      .variables.find((v) => v.varId === varId).value;\r\n  }\r\n\r\n  function getUpdatedVarModel(pageId, varId, value) {\r\n    return [...variablesModel].map((p) => {\r\n      p.variables = [...p.variables]; // clone variables\r\n\r\n      if (p.pageId === pageId) {\r\n        // Update variable value\r\n        p.variables.find((v) => v.varId === varId).value = value;\r\n        // Update dynamic content\r\n        p.content = getDynamicContent();\r\n      }\r\n      return p;\r\n    });\r\n  }\r\n\r\n  // Dynamically changes the values of the text input fields based on the selected page\r\n\r\n  let variables = selectedPage.variables.map((variable) => {\r\n    return (\r\n      <div key={variable.id} className='form-group'>\r\n        <label>{variable.description}:</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          value={getVarValue(selectedPage.id, variable.id)}\r\n          onChange={(e) => {\r\n            setVariablesModel(\r\n              getUpdatedVarModel(selectedPage.id, variable.id, e.target.value)\r\n            );\r\n            varUpdated(variablesModel);\r\n          }}\r\n          placeholder={variable.description}></input>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={selectedPage.image}\r\n        style={{ width: \"200px\", height: \"150px\" }}\r\n        alt='school'\r\n      />\r\n      <div className='form-group'>{variables}</div>\r\n      <div dangerouslySetInnerHTML={{ __html: dynamicContent }}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryInput;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Login.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\auth.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryTemplate.js",["87"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navigation from \"../pages/Navigation\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\nfunction StoryTemplate() {\r\n  const templates = require(\"./templates.json\");\r\n\r\n  const [formData, setFormData] = useState(\"Choose template\");\r\n\r\n/*   if (Auth.loggedIn() && Auth.getProfile().data.username) {\r\n    return <Link to='/template' />;\r\n    //return(<p>You are logged In</p>);\r\n  }\r\n  if (!Auth.getProfile().data.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in!\r\n      </h4>\r\n    );\r\n  } */\r\n\r\n  //const navigate = useNavigate();\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setFormData(\"Choose template\");\r\n  };\r\n\r\n  return (\r\n    <div className='jumbotron'>\r\n      <Navigation />\r\n      <h1>Welcome!</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <label className='m-2'>Choose a template:</label>\r\n        <select\r\n          id='selectTemplate'\r\n          name='template'\r\n          onChange={handleInputChange}>\r\n          <option disabled value='Choose template'>\r\n            Select\r\n          </option>\r\n          {templates.map((template) => {\r\n            return (\r\n              <option key={template.id} value={template.id}>\r\n                {template.title}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <Link\r\n          to={`/stories/${formData.template}/new`}\r\n          className='btn btn-secondary'>\r\n          Submit\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryTemplate;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Signup.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Navigation.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Main.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":8,"nodeType":"94","messageId":"95","endLine":15,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":34,"column":51,"nodeType":"98","messageId":"99","endLine":34,"endColumn":53},{"ruleId":"92","severity":1,"message":"100","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":12,"column":16,"nodeType":"103","endLine":18,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":15,"column":3,"nodeType":"106","endLine":24,"endColumn":4},{"ruleId":"92","severity":1,"message":"107","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":12},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","The 'getDynamicContent' function makes the dependencies of useEffect Hook (at line 13) change on every render. To fix this, wrap the definition of 'getDynamicContent' in its own useCallback() Hook.","FunctionDeclaration","'Auth' is defined but never used.","no-global-assign","no-unsafe-negation"]