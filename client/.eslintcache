[{"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\index.js":"1","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\reportWebVitals.js":"2","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\App.js":"3","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Home.js":"4","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\queries.js":"5","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\mutations.js":"6","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryList.js":"7","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryAdd.js":"8","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInfo.js":"9","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryEdit.js":"10","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryPages.js":"11","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInput.js":"12","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Login.js":"13","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\auth.js":"14","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryTemplate.js":"15","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Signup.js":"16","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Navigation.js":"17"},{"size":692,"mtime":1643882236371,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1642314124616,"results":"20","hashOfConfig":"19"},{"size":2338,"mtime":1643876259896,"results":"21","hashOfConfig":"19"},{"size":817,"mtime":1643962097118,"results":"22","hashOfConfig":"19"},{"size":912,"mtime":1644047315202,"results":"23","hashOfConfig":"19"},{"size":2080,"mtime":1644096164208,"results":"24","hashOfConfig":"19"},{"size":1768,"mtime":1644172042555,"results":"25","hashOfConfig":"19"},{"size":4565,"mtime":1644132895304,"results":"26","hashOfConfig":"19"},{"size":3056,"mtime":1644135623129,"results":"27","hashOfConfig":"19"},{"size":4963,"mtime":1644135629147,"results":"28","hashOfConfig":"19"},{"size":851,"mtime":1644039539063,"results":"29","hashOfConfig":"19"},{"size":2795,"mtime":1644133539016,"results":"30","hashOfConfig":"19"},{"size":3042,"mtime":1643958773476,"results":"31","hashOfConfig":"19"},{"size":759,"mtime":1643868366931,"results":"32","hashOfConfig":"19"},{"size":1026,"mtime":1644044290171,"results":"33","hashOfConfig":"19"},{"size":3442,"mtime":1643958401153,"results":"34","hashOfConfig":"19"},{"size":1326,"mtime":1643943283374,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"zpfcfd",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\index.js",[],["75","76"],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\reportWebVitals.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\App.js",["77"],"import * as React from \"react\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\n\n\nimport Home from \"./components/pages/Home\";\nimport Navigation from \"./components/pages/Navigation\";\nimport Login from \"./components/pages/Login\";\nimport Signup from \"./components/pages/Signup\";\n\nimport StoryList from \"./components/stories/StoryList\";\nimport StoryAdd from \"./components/stories/StoryAdd\";\nimport StoryInfo from \"./components/stories/StoryInfo\";\nimport StoryEdit from \"./components/stories/StoryEdit\";\nimport StoryTemplate from \"./components/stories/StoryTemplate\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='container flex-column justify-flex-start min-100-vh'>\n          <Routes>\n            <Route exact path='/' element={<Home />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/login' element={<Login />} />\n          </Routes>\n          <Routes>\n            <Route exact path='/signup' element={<Signup />} />\n          </Routes>\n          <div className='container'>\n            <Main />\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nfunction Main() {\n  return (\n    <Routes>\n      {/*   <Route exact path='/' element={<Home />} /> */}\n      {/*   <Route exact path='/login' element={<Login />} /> */}\n      {/*    <Route exact path='/signup' element={<Signup />} /> */}\n      <Route exact path='/template' element={<StoryTemplate />} />\n      <Route exact path='/stories' element={<StoryList />} />\n      <Route exact path='/stories/:id/new' element={<StoryAdd />} />\n      <Route exact path='/stories/:id' element={<StoryInfo />} />\n      <Route exact path='/stories/:id/edit' element={<StoryEdit />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Home.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\queries.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\mutations.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryList.js",["78"],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryAdd.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInfo.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryEdit.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryPages.js",["79","80","81"],"import { React, useState } from \"react\";\r\nimport { Icons } from \"semantic-ui-react\";\r\nimport \"../../App.css\";\r\n\r\nfunction StoryPages(props) {\r\n  const pages = props.pages;\r\n  const pageSelected = props.pageSelected;\r\n\r\n  const [selectedPage, setSelectedPage] = useState(pages[0]);\r\n\r\n  let links = pages.map((page) => {\r\n    return (\r\n      // TODO: Change to button\r\n      <a\r\n        className='item'\r\n        key={page.id}\r\n        href='#'\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setSelectedPage(page);\r\n          pageSelected(page);\r\n        }}>\r\n        <i className='pencil alternate icon'></i>\r\n        {page.title}\r\n        <br />\r\n        <span>{page.description}</span>\r\n      </a>\r\n    );\r\n  });\r\n\r\n  return <div className='ui visible left vertical sidebar menu'>{links}</div>;\r\n}\r\nexport default StoryPages;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryInput.js",["82","83"],"import { React, useState, useEffect } from \"react\";\r\nimport { Image, Form } from \"semantic-ui-react\";\r\n\r\nfunction StoryInput(props) {\r\n  const selectedPage = props.selectedPage;\r\n  const varUpdated = props.variablesUpdated;\r\n  const varModel = props.variablesModel;\r\n\r\n  const [variablesModel, setVariablesModel] = useState(varModel);\r\n  const [dynamicContent, setDynamicContent] = useState(getDynamicContent());\r\n\r\n  useEffect(() => {\r\n    setDynamicContent(getDynamicContent());\r\n  }, [getDynamicContent]);\r\n\r\n  function getDynamicContent() {\r\n    let dynContent = selectedPage.content;\r\n    selectedPage.variables.forEach((variable) => {\r\n      dynContent = dynContent.replace(\r\n        new RegExp(variable.name, \"g\"),\r\n        getVarValue(selectedPage.id, variable.id)\r\n      );\r\n    });\r\n    return dynContent;\r\n  }\r\n\r\n  function getVarValue(pageId, varId) {\r\n    return variablesModel\r\n      .find((p) => p.pageId === pageId)\r\n      .variables.find((v) => v.varId === varId).value;\r\n  }\r\n\r\n  function getUpdatedVarModel(pageId, varId, value) {\r\n    return [...variablesModel].map((p) => {\r\n      p.variables = [...p.variables]; // clone variables\r\n\r\n      if (p.pageId === pageId) {\r\n        // Update variable value\r\n        p.variables.find((v) => v.varId === varId).value = value;\r\n        // Update dynamic content\r\n        p.content = getDynamicContent();\r\n      }\r\n      return p;\r\n    });\r\n  }\r\n\r\n  // Dynamically changes the values of the text input fields based on the selected page\r\n\r\n  let variables = selectedPage.variables.map((variable) => {\r\n    return (\r\n      <div  key={variable.id} className='nine wide field'>\r\n        <label >{variable.description}:</label>\r\n        <input\r\n          type='text'\r\n          value={getVarValue(selectedPage.id, variable.id)}\r\n          onChange={(e) => {\r\n            setVariablesModel(\r\n              getUpdatedVarModel(selectedPage.id, variable.id, e.target.value)\r\n            );\r\n            varUpdated(variablesModel);\r\n          }}\r\n          placeholder={variable.description}></input>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div id=\"storyList\"  className='ui two column divided grid'>\r\n      <div className='stretched row'>\r\n        <div className='column'>\r\n          <div className='ui segment'>\r\n            <Image src={selectedPage.image} alt='school' />\r\n          </div>\r\n        </div>\r\n        <div className='column'>\r\n          <div  className='ui form'>\r\n            {variables}\r\n            <div className='ui message nine wide field'>\r\n              <div className='header'>Preview</div>\r\n              <div\r\n                dangerouslySetInnerHTML={{ __html: dynamicContent }}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryInput;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Login.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\utils\\auth.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\stories\\StoryTemplate.js",["84","85"],"import React, { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Navigation from \"../pages/Navigation\";\r\nimport \"../../App.css\";\r\n\r\nfunction StoryTemplate() {\r\n  const templates = require(\"./templates.json\");\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <h2>Please choose a template:</h2>\r\n      <div className='ui cards'>\r\n        {templates.map((template) => {\r\n          return (\r\n            <div className='card' key={template.id}>\r\n              <div className='content'>\r\n                <div className='header'>{template.title}</div>\r\n                <div className='description'>{template.description}</div>\r\n              </div>\r\n              <Link to={`/stories/${template.id}/new`} type='submit'>\r\n                <div className='ui bottom attached button'>\r\n                  <i className='add icon'></i>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryTemplate;\r\n","C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Signup.js",[],"C:\\Repos\\BootCamp\\Social-Stories\\client\\src\\components\\pages\\Navigation.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":15,"column":8,"nodeType":"92","messageId":"93","endLine":15,"endColumn":18},{"ruleId":"90","severity":1,"message":"94","line":27,"column":12,"nodeType":"92","messageId":"93","endLine":27,"endColumn":33},{"ruleId":"90","severity":1,"message":"95","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"96","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":14,"column":7,"nodeType":"99","endLine":22,"endColumn":12},{"ruleId":"90","severity":1,"message":"100","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":16,"column":3,"nodeType":"103","endLine":25,"endColumn":4},{"ruleId":"90","severity":1,"message":"104","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"105","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":23},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'checkAvailableStories' is defined but never used.","'Icons' is defined but never used.","'selectedPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","react-hooks/exhaustive-deps","The 'getDynamicContent' function makes the dependencies of useEffect Hook (at line 14) change on every render. To fix this, wrap the definition of 'getDynamicContent' in its own useCallback() Hook.","FunctionDeclaration","'useState' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]